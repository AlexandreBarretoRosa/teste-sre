# ConfigMap para AlertManager
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app: alertmanager
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alertmanager@sre-desafio.local'
      smtp_auth_username: ''
      smtp_auth_password: ''
      smtp_require_tls: false

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      - match:
          severity: critical
        receiver: 'web.hook'
        continue: true
      - match:
          severity: warning
        receiver: 'web.hook'
        continue: true

    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://127.0.0.1:5001/'
        send_resolved: true
      email_configs:
      - to: 'admin@sre-desafio.local'
        send_resolved: true
        headers:
          subject: 'SRE Desafio - Alerta: {{`{{ .GroupLabels.alertname }}`}}'
        html: |
          <h1>SRE Desafio - Alerta</h1>
          <p><strong>Alerta:</strong> {{`{{ .GroupLabels.alertname }}`}}</p>
          <p><strong>Severidade:</strong> {{`{{ .GroupLabels.severity }}`}}</p>
          <p><strong>Serviço:</strong> {{`{{ .GroupLabels.service }}`}}</p>
          <p><strong>Descrição:</strong> {{`{{ .CommonAnnotations.description }}`}}</p>
          <p><strong>Resumo:</strong> {{`{{ .CommonAnnotations.summary }}`}}</p>
          <hr>
          <p><small>Enviado por AlertManager - SRE Desafio</small></p>

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'dev', 'instance']
---
# Service para AlertManager
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app: alertmanager
spec:
  selector:
    app: alertmanager
  ports:
  - name: http
    port: 9093
    targetPort: 9093
  type: ClusterIP
---
# Deployment para AlertManager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        {{- include "monitoring.selectorLabels" . | nindent 8 }}
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: {{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.image.tag }}
        imagePullPolicy: {{ .Values.alertmanager.image.pullPolicy }}
        args:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
        - '--storage.path=/alertmanager'
        ports:
        - containerPort: 9093
        volumeMounts:
        - name: alertmanager-config
          mountPath: /etc/alertmanager
        - name: alertmanager-storage
          mountPath: /alertmanager
        resources:
          {{- toYaml .Values.alertmanager.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: alertmanager-config
        configMap:
          name: alertmanager-config
      - name: alertmanager-storage
        emptyDir: {}
